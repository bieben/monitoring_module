openapi: 3.0.0
info:
  title: 模型服务微服务架构 API
  description: 用于模型上传、部署、预测和管理的API文档
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: 主服务API
  - url: http://localhost:5050
    description: 注册中心API
  - url: http://localhost:{port}
    description: 独立模型服务API
    variables:
      port:
        default: '8000'
        description: 独立模型服务端口

tags:
  - name: 主服务
    description: 模型管理与部署相关接口
  - name: 独立模型服务
    description: 在独立进程中运行的模型服务接口
  - name: 注册中心
    description: 模型服务注册中心接口
  - name: 监控
    description: 监控与指标相关接口

paths:
  # 主服务接口
  /upload_model:
    post:
      tags:
        - 主服务
      summary: 上传模型文件
      description: 上传并注册模型
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - model_id
                - file
              properties:
                model_id:
                  type: string
                  description: 模型唯一标识符
                file:
                  type: string
                  format: binary
                  description: 模型文件（.pkl格式）
      responses:
        '200':
          description: 模型上传成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Model test_model uploaded successfully
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing model_id or file
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to save model

  /deploy:
    post:
      tags:
        - 主服务
      summary: 部署模型为独立服务
      description: 将已上传的模型部署为独立微服务
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - model_id
              properties:
                model_id:
                  type: string
                  description: 要部署的模型ID
                environment:
                  type: string
                  description: 部署环境
                  default: production
                  enum:
                    - production
                    - staging
                    - development
                resources:
                  type: object
                  description: 资源配置
                  properties:
                    cpu_limit:
                      type: string
                      description: CPU限制
                      example: "2"
                    memory_limit:
                      type: string
                      description: 内存限制
                      example: "512MB"
                    timeout:
                      type: integer
                      description: 超时时间(秒)
                      example: 60
      responses:
        '200':
          description: 模型部署成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Model test_model deployed successfully
                  service_url:
                    type: string
                    example: http://localhost:8000
                  port:
                    type: integer
                    example: 8000
                  config:
                    type: object
        '400':
          description: 请求错误
        '404':
          description: 模型未找到
        '500':
          description: 服务器错误

  /predict:
    post:
      tags:
        - 主服务
      summary: 执行模型预测
      description: 使用指定的模型进行预测（自动转发到独立服务）
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - model_id
                - features
              properties:
                model_id:
                  type: string
                  description: 模型ID
                features:
                  type: array
                  items:
                    type: number
                  description: 特征值数组
                  example: [5.1, 3.5, 1.4, 0.2]
      responses:
        '200':
          description: 预测成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  prediction:
                    type: number
                    description: 预测结果
                    example: 0.95
                  latency:
                    type: number
                    description: 预测延迟（秒）
                    example: 0.0021
                  model_id:
                    type: string
                    example: test_model
                  timestamp:
                    type: number
                    example: 1634567890.123
        '400':
          description: 请求错误
        '404':
          description: 模型未找到
        '500':
          description: 服务器错误

  /models/status:
    get:
      tags:
        - 主服务
      summary: 获取所有模型状态
      description: 获取所有已注册模型的详细状态
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  models:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                          enum: [active, inactive]
                        metadata:
                          type: object
                        performance:
                          type: object
                        deployment:
                          type: object
                  total_models:
                    type: integer
                    example: 3

  /delete_model/{model_id}:
    delete:
      tags:
        - 主服务
      summary: 删除模型
      description: 删除指定的模型及其服务（如果已部署）
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
          description: 要删除的模型ID
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Model test_model deleted successfully
        '404':
          description: 模型未找到
        '500':
          description: 服务器错误

  /stop_deployment/{model_id}:
    post:
      tags:
        - 主服务
      summary: 停止模型部署
      description: 停止指定模型的部署，但不删除模型
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
          description: 要停止部署的模型ID
      responses:
        '200':
          description: 停止成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Model test_model deployment stopped successfully
        '404':
          description: 模型未找到
        '500':
          description: 服务器错误

  /health:
    get:
      tags:
        - 主服务
        - 监控
      summary: 健康检查
      description: 服务健康状态检查
      responses:
        '200':
          description: 服务健康
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  service:
                    type: string
                    example: model-service
                  timestamp:
                    type: number
                    example: 1634567890.123
                  models:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 5
                      deployed:
                        type: integer
                        example: 3

  /metrics:
    get:
      tags:
        - 主服务
        - 监控
      summary: Prometheus指标
      description: 获取Prometheus格式的监控指标
      responses:
        '200':
          description: 指标获取成功
          content:
            text/plain:
              schema:
                type: string
                example: |
                  # HELP model_service_requests_total Total model service requests
                  # TYPE model_service_requests_total counter
                  model_service_requests_total{endpoint="/predict",model_id="test_model"} 42

  # 独立模型服务接口
  /infer:
    post:
      tags:
        - 独立模型服务
      summary: 执行模型推理
      description: 使用独立服务中的模型直接进行推理
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - features
              properties:
                features:
                  type: array
                  items:
                    type: number
                  description: 特征值数组
                  example: [5.1, 3.5, 1.4, 0.2]
      responses:
        '200':
          description: 推理成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    example: test_model
                  prediction:
                    type: number
                    example: 0.95
                  latency:
                    type: number
                    example: 0.0021
                  timestamp:
                    type: number
                    example: 1634567890.123
        '400':
          description: 请求错误
        '500':
          description: 服务器错误

  /metadata:
    get:
      tags:
        - 独立模型服务
      summary: 获取模型元数据
      description: 获取独立服务中模型的元数据
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    example: test_model
                  feature_names:
                    type: array
                    items:
                      type: string
                    example: ["sepal_length", "sepal_width", "petal_length", "petal_width"]
                  feature_count:
                    type: integer
                    example: 4
                  metadata:
                    type: object
                  service_uptime_seconds:
                    type: number
                    example: 3600.5
        '500':
          description: 服务器错误

  # 注册中心接口
  /register:
    post:
      tags:
        - 注册中心
      summary: 注册模型服务
      description: 向注册中心注册一个模型服务
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - model_id
                - port
              properties:
                model_id:
                  type: string
                  description: 模型ID
                port:
                  type: integer
                  description: 服务端口
                status:
                  type: string
                  description: 服务状态
                  default: running
                metadata:
                  type: object
                  description: 模型元数据
                features:
                  type: array
                  items:
                    type: string
                  description: 特征名称列表
      responses:
        '200':
          description: 注册成功
        '400':
          description: 请求错误
        '500':
          description: 服务器错误

  /unregister/{model_id}:
    post:
      tags:
        - 注册中心
      summary: 注销模型服务
      description: 从注册中心注销一个模型服务
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
          description: 要注销的模型ID
      responses:
        '200':
          description: 注销成功
        '404':
          description: 服务未找到
        '500':
          description: 服务器错误

  /services:
    get:
      tags:
        - 注册中心
      summary: 获取所有已注册服务
      description: 获取注册中心中所有已注册的模型服务列表
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  services:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        url:
                          type: string
                          example: http://localhost:8000
                        port:
                          type: integer
                          example: 8000
                        status:
                          type: string
                          example: running
                        registered_at:
                          type: number
                          example: 1634567890.123
                  count:
                    type: integer
                    example: 3
        '500':
          description: 服务器错误

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        error_type:
          type: string
    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        uptime_seconds:
          type: number
        timestamp:
          type: number 